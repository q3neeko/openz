<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="ProductNote9E6795660D1C42B9AAF33DD0D89E7600Data" package="org.openbravo.erpWindows.com.elreha.sales.SalesProduct">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(elrs_product_notes.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = elrs_product_notes.CreatedBy) as CreatedByR, 
        to_char(elrs_product_notes.Updated, ?) as updated, 
        to_char(elrs_product_notes.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        elrs_product_notes.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = elrs_product_notes.UpdatedBy) as UpdatedByR,
        elrs_product_notes.AD_Client_ID, 
(CASE WHEN elrs_product_notes.AD_Client_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS AD_Client_IDR, 
elrs_product_notes.AD_Org_ID, 
(CASE WHEN elrs_product_notes.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Name), ''))),'') ) END) AS AD_Org_IDR, 
elrs_product_notes.M_Product_ID, 
(CASE WHEN elrs_product_notes.M_Product_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Value), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL3.Name IS NULL THEN TO_CHAR(table3.Name) ELSE TO_CHAR(tableTRL3.Name) END)), ''))),'') ) END) AS M_Product_IDR, 
COALESCE(elrs_product_notes.Isactive, 'N') AS Isactive, 
elrs_product_notes.Name, 
elrs_product_notes.Note, 
elrs_product_notes.Value, 
elrs_product_notes.Elrs_Product_Notes_ID, 
 
        ? AS LANGUAGE 
        FROM elrs_product_notes left join (select AD_Client_ID, Name from AD_Client) table1 on (elrs_product_notes.AD_Client_ID = table1.AD_Client_ID) left join (select AD_Org_ID, Name from AD_Org) table2 on (elrs_product_notes.AD_Org_ID = table2.AD_Org_ID) left join (select M_Product_ID, Value, Name from M_Product) table3 on (elrs_product_notes.M_Product_ID = table3.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL3 on (table3.M_Product_ID = tableTRL3.M_Product_ID and tableTRL3.AD_Language = ?) 
        WHERE 2=2 

        AND 1=1 
        AND elrs_product_notes.Elrs_Product_Notes_ID = ? 
        AND elrs_product_notes.AD_Client_ID IN ('1') 
           AND elrs_product_notes.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>

    <Parameter name="mProductId" optional="true" after="AND 1=1 " id="paramKeyParent"> AND elrs_product_notes.M_Product_ID = ? </Parameter>
    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="elrs_product_notes.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="elrs_product_notes.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>
    <Parameter name="mProductId" id="paramKeyParent"></Parameter>
<Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="mProductIdr"></Parameter><Parameter name="name"></Parameter><Parameter name="elrsProductNotesId"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="value"></Parameter><Parameter name="isactive"></Parameter><Parameter name="note"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef9076595CD84249A0BF882CEBFD332248_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Updatedby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDefB74AB8092EA74EC0920BEF2B7C53029C_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as Createdby FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedbyR"/>
  </SqlMethod>

   <SqlMethod name="selectDefCAA78B52F91F43EDA536E18569583A31_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Value), '')  || ' - ' || COALESCE(TO_CHAR(table1.Name), '') ) as M_Product_ID FROM M_Product table1 WHERE table1.isActive='Y' AND table1.M_Product_ID = ?  
    ]]></Sql>
<Parameter name="M_Product_IDR"/>
  </SqlMethod>



  <SqlMethod name="selectParentID" type="preparedStatement" return="String" default="">
    <SqlMethodComment>return the parent ID</SqlMethodComment>
    <Sql><![CDATA[
        SELECT elrs_product_notes.M_Product_ID AS NAME
        FROM elrs_product_notes
        WHERE elrs_product_notes.Elrs_Product_Notes_ID = ?
    ]]></Sql>
    <Parameter name="key"></Parameter>
  </SqlMethod>

   <SqlMethod name="selectParent" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Value), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL1.Name IS NULL THEN TO_CHAR(table1.Name) ELSE TO_CHAR(tableTRL1.Name) END)), ''))) AS NAME FROM M_Product left join (select M_Product_ID, Value, Name from M_Product) table1 on (M_Product.M_Product_ID = table1.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL1 on (table1.M_Product_ID = tableTRL1.M_Product_ID and tableTRL1.AD_Language = ?)  WHERE M_Product.M_Product_ID = ?  
    ]]></Sql>
<Parameter name="paramLanguage"/>
<Parameter name="mProductId"/>

  </SqlMethod>



   <SqlMethod name="selectParentTrl" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for parent field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT (TO_CHAR(COALESCE(TO_CHAR(table1.Value), '')) || ' - ' || TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL1.Name IS NULL THEN TO_CHAR(table1.Name) ELSE TO_CHAR(tableTRL1.Name) END)), ''))) AS NAME FROM M_Product left join (select M_Product_ID, Value, Name from M_Product) table1 on (M_Product.M_Product_ID = table1.M_Product_ID) left join (select M_Product_ID,AD_Language, Name from M_Product_TRL) tableTRL1 on (table1.M_Product_ID = tableTRL1.M_Product_ID and tableTRL1.AD_Language = ?)  WHERE M_Product.M_Product_ID = ?  
    ]]></Sql>
<Parameter name="paramLanguage"/>
<Parameter name="mProductId"/>

  </SqlMethod>








  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE elrs_product_notes
        SET AD_Client_ID = (?) , AD_Org_ID = (?) , M_Product_ID = (?) , Isactive = (?) , Name = (?) , Note = (?) , Value = (?) , Elrs_Product_Notes_ID = (?) , updated = now(), updatedby = ? 
        WHERE elrs_product_notes.Elrs_Product_Notes_ID = ? 
                 AND elrs_product_notes.M_Product_ID = ? 
        AND elrs_product_notes.AD_Client_ID IN ('1') 
        AND elrs_product_notes.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="mProductId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="name"></Parameter> <Parameter name="note"></Parameter> <Parameter name="value"></Parameter> <Parameter name="elrsProductNotesId"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="elrsProductNotesId"></Parameter>
    
    <Parameter name="mProductId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="elrs_product_notes.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="elrs_product_notes.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO elrs_product_notes 
        (AD_Client_ID, AD_Org_ID, M_Product_ID, Isactive, Name, Note, Value, Elrs_Product_Notes_ID, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), (?), (?), (?), (?), (?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="adClientId"></Parameter> <Parameter name="adOrgId"></Parameter> <Parameter name="mProductId"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="name"></Parameter> <Parameter name="note"></Parameter> <Parameter name="value"></Parameter> <Parameter name="elrsProductNotesId"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM elrs_product_notes
        WHERE elrs_product_notes.Elrs_Product_Notes_ID = ? 
                 AND elrs_product_notes.M_Product_ID = ? 
        AND elrs_product_notes.AD_Client_ID IN ('1') 
        AND elrs_product_notes.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="mProductId" id="paramKeyParent"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="elrs_product_notes.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="elrs_product_notes.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM elrs_product_notes
        WHERE elrs_product_notes.Elrs_Product_Notes_ID = ? 
                 AND elrs_product_notes.M_Product_ID = ? 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
        <Parameter name="mProductId" id="paramKeyParent"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM elrs_product_notes
         WHERE elrs_product_notes.Elrs_Product_Notes_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM elrs_product_notes
         WHERE elrs_product_notes.Elrs_Product_Notes_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>