<?xml version="1.0" encoding="UTF-8"?>
<SqlClass id="class" name="WarehouseData" package="org.openbravo.erpWindows.WarehouseandStorageBins">
  <SqlClassComment>WAD Generated class</SqlClassComment>

  <SqlMethod name="selectEdit" type="preparedStatement" return="multiple">
    <SqlMethodComment>Select for edit</SqlMethodComment>
    <Sql><![CDATA[
        SELECT to_char(M_Warehouse.Created, ?) as created, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = M_Warehouse.CreatedBy) as CreatedByR, 
        to_char(M_Warehouse.Updated, ?) as updated, 
        to_char(M_Warehouse.Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp,  
        M_Warehouse.UpdatedBy, 
        (SELECT NAME FROM AD_USER u WHERE AD_USER_ID = M_Warehouse.UpdatedBy) as UpdatedByR,
        M_Warehouse.AD_Org_ID, 
(CASE WHEN M_Warehouse.AD_Org_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table1.Name), ''))),'') ) END) AS AD_Org_IDR, 
M_Warehouse.Value, 
M_Warehouse.Name, 
M_Warehouse.Description, 
COALESCE(M_Warehouse.IsActive, 'N') AS IsActive, 
M_Warehouse.C_Location_ID, 
(CASE WHEN M_Warehouse.C_Location_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Address1), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Address2), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.Postal), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table2.City), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table3.Name), ''))),'')  || ' - ' || COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR((CASE WHEN tableTRL4.Name IS NULL THEN TO_CHAR(table4.Name) ELSE TO_CHAR(tableTRL4.Name) END)), ''))),'') ) END) AS C_Location_IDR, 
M_Warehouse.C_Salesregion_ID, 
(CASE WHEN M_Warehouse.C_Salesregion_ID IS NULL THEN '' ELSE  (COALESCE(TO_CHAR(TO_CHAR(COALESCE(TO_CHAR(table5.Name), ''))),'') ) END) AS C_Salesregion_IDR, 
M_Warehouse.Separator, 
COALESCE(M_Warehouse.IsShipper, 'N') AS IsShipper, 
M_Warehouse.Shippercode, 
COALESCE(M_Warehouse.Isblocked, 'N') AS Isblocked, 
M_Warehouse.M_Warehouse_ID, 
M_Warehouse.AD_Client_ID, 
M_Warehouse.ToDocumentNo, 
M_Warehouse.FromDocumentNo, 
 
        ? AS LANGUAGE 
        FROM M_Warehouse left join (select AD_Org_ID, Name from AD_Org) table1 on (M_Warehouse.AD_Org_ID = table1.AD_Org_ID) left join (select C_Location_ID, Address1, Address2, Postal, City, C_Region_ID, C_Country_ID from C_Location) table2 on (M_Warehouse.C_Location_ID = table2.C_Location_ID) left join (select C_Region_ID, Name from C_Region) table3 on (table2.C_Region_ID = table3.C_Region_ID) left join (select C_Country_ID, Name from C_Country) table4 on (table2.C_Country_ID = table4.C_Country_ID) left join (select C_Country_ID,AD_Language, Name from C_Country_TRL) tableTRL4 on (table4.C_Country_ID = tableTRL4.C_Country_ID and tableTRL4.AD_Language = ?)  left join (select C_Salesregion_ID, Name from C_Salesregion) table5 on (M_Warehouse.C_Salesregion_ID = table5.C_Salesregion_ID)
        WHERE 2=2 

        AND 1=1 
        AND M_Warehouse.M_Warehouse_ID = ? 
        AND M_Warehouse.AD_Client_ID IN ('1') 
           AND M_Warehouse.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="dateTimeFormat"></Parameter>
    <Parameter name="dateTimeFormat"></Parameter>
    
    <Parameter name="paramLanguage"></Parameter>
<Parameter name="paramLanguage"/>


    <Parameter name="key"></Parameter>
        <Parameter name="adUserClient" type="replace" optional="true" after="M_Warehouse.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="M_Warehouse.AD_Org_ID IN (" text="'1'"/>

    <Field name="adUserClient" value="void"></Field>
    <Field name="adOrgClient" value="void"></Field>
    <Field name="createdby" value="void"></Field>
    
    <Field name="trBgcolor" value="void"></Field>
    <Field name="totalCount" value="void"></Field>
    <Field name="dateTimeFormat" value=""></Field>
  </SqlMethod>
  
  

  <SqlMethod name="set" type="constant" return="multiple">
      <SqlMethodComment>Create a registry</SqlMethodComment>
      <Sql></Sql>

<Parameter name="mWarehouseId"></Parameter><Parameter name="createdby"></Parameter><Parameter name="createdbyr"></Parameter><Parameter name="isshipper"></Parameter><Parameter name="shippercode"></Parameter><Parameter name="value"></Parameter><Parameter name="adClientId"></Parameter><Parameter name="cLocationId"></Parameter><Parameter name="cLocationIdr"></Parameter><Parameter name="isactive"></Parameter><Parameter name="description"></Parameter><Parameter name="isblocked"></Parameter><Parameter name="adOrgId"></Parameter><Parameter name="cSalesregionId"></Parameter><Parameter name="fromdocumentno"></Parameter><Parameter name="separator"></Parameter><Parameter name="todocumentno"></Parameter><Parameter name="updatedby"></Parameter><Parameter name="updatedbyr"></Parameter><Parameter name="name"></Parameter>
   </SqlMethod>






   <SqlMethod name="selectDef1251_0" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as CreatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="CreatedByR"/>
  </SqlMethod>

   <SqlMethod name="selectDef1154_1" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Address1), '')  || ' - ' || COALESCE(TO_CHAR(table1.Address2), '')  || ' - ' || COALESCE(TO_CHAR(table1.Postal), '')  || ' - ' || COALESCE(TO_CHAR(table1.City), '')  || ' - ' || COALESCE(TO_CHAR(table1.C_Region_ID), '')  || ' - ' || COALESCE(TO_CHAR(table1.C_Country_ID), '') ) as C_Location_ID FROM C_Location table1 WHERE table1.isActive='Y' AND table1.C_Location_ID = ?  
    ]]></Sql>
<Parameter name="C_Location_IDR"/>
  </SqlMethod>

   <SqlMethod name="selectDef1253_2" type="preparedStatement" return="String" default="">
    <SqlMethodComment>Select for auxiliar field</SqlMethodComment>
    <Sql><![CDATA[
        SELECT  ( COALESCE(TO_CHAR(table1.Name), '') ) as UpdatedBy FROM AD_User table1 WHERE table1.isActive='Y' AND table1.AD_User_ID = ?  
    ]]></Sql>
<Parameter name="UpdatedByR"/>
  </SqlMethod>










  <SqlMethod name="update" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        UPDATE M_Warehouse
        SET AD_Org_ID = (?) , Value = (?) , Name = (?) , Description = (?) , IsActive = (?) , C_Location_ID = (?) , C_Salesregion_ID = (?) , Separator = (?) , IsShipper = (?) , Shippercode = (?) , Isblocked = (?) , M_Warehouse_ID = (?) , AD_Client_ID = (?) , ToDocumentNo = TO_NUMBER(?) , FromDocumentNo = TO_NUMBER(?) , updated = now(), updatedby = ? 
        WHERE M_Warehouse.M_Warehouse_ID = ? 
        
        AND M_Warehouse.AD_Client_ID IN ('1') 
        AND M_Warehouse.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="adOrgId"></Parameter> <Parameter name="value"></Parameter> <Parameter name="name"></Parameter> <Parameter name="description"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="cLocationId"></Parameter> <Parameter name="cSalesregionId"></Parameter> <Parameter name="separator"></Parameter> <Parameter name="isshipper"></Parameter> <Parameter name="shippercode"></Parameter> <Parameter name="isblocked"></Parameter> <Parameter name="mWarehouseId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="todocumentno"></Parameter> <Parameter name="fromdocumentno"></Parameter> 
    <Parameter name="updatedby"></Parameter>
    <Parameter id="paramKey" name="mWarehouseId"></Parameter>
    
    
        <Parameter name="adUserClient" type="replace" optional="true" after="M_Warehouse.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="M_Warehouse.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="insert" type="preparedStatement" return="rowCount" static="false" connection="true">
    <Sql><![CDATA[
        INSERT INTO M_Warehouse 
        (AD_Org_ID, Value, Name, Description, IsActive, C_Location_ID, C_Salesregion_ID, Separator, IsShipper, Shippercode, Isblocked, M_Warehouse_ID, AD_Client_ID, ToDocumentNo, FromDocumentNo, created, createdby, updated, updatedBy)
        VALUES ((?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), (?), TO_NUMBER(?), TO_NUMBER(?), now(), ?, now(), ?)
    ]]></Sql>
    <Parameter name="adOrgId"></Parameter> <Parameter name="value"></Parameter> <Parameter name="name"></Parameter> <Parameter name="description"></Parameter> <Parameter name="isactive"></Parameter> <Parameter name="cLocationId"></Parameter> <Parameter name="cSalesregionId"></Parameter> <Parameter name="separator"></Parameter> <Parameter name="isshipper"></Parameter> <Parameter name="shippercode"></Parameter> <Parameter name="isblocked"></Parameter> <Parameter name="mWarehouseId"></Parameter> <Parameter name="adClientId"></Parameter> <Parameter name="todocumentno"></Parameter> <Parameter name="fromdocumentno"></Parameter> 
    <Parameter name="createdby"></Parameter>
    <Parameter name="updatedby"></Parameter>
  </SqlMethod>

  <SqlMethod name="delete" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM M_Warehouse
        WHERE M_Warehouse.M_Warehouse_ID = ? 
        
        AND M_Warehouse.AD_Client_ID IN ('1') 
        AND M_Warehouse.AD_Org_ID IN ('1') 
    ]]></Sql>
    <Parameter name="param1"></Parameter>
    
        <Parameter name="adUserClient" type="replace" optional="true" after="M_Warehouse.AD_Client_ID IN (" text="'1'"/>
        <Parameter name="adOrgClient" type="replace" optional="true" after="M_Warehouse.AD_Org_ID IN (" text="'1'"/>
  </SqlMethod>

  <SqlMethod name="deleteTransactional" connection="true" type="preparedStatement" return="rowCount">
    <Sql><![CDATA[
        DELETE FROM M_Warehouse
        WHERE M_Warehouse.M_Warehouse_ID = ? 
        
    ]]></Sql>
    <Parameter name="param1"></Parameter>
    
  </SqlMethod>
  
  <SqlMethod name="selectOrg" type="preparedStatement" return="string">
    <SqlMethodComment>Select for relation</SqlMethodComment>
    <Sql><![CDATA[ 
        SELECT AD_ORG_ID
          FROM M_Warehouse
         WHERE M_Warehouse.M_Warehouse_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
  
  <SqlMethod name="getCurrentDBTimestamp" type="preparedStatement" return="string">
    <Sql><![CDATA[ 
        SELECT to_char(Updated, 'YYYYMMDDHH24MISS') as Updated_Time_Stamp
          FROM M_Warehouse
         WHERE M_Warehouse.M_Warehouse_ID = ? 
    ]]></Sql>
    <Parameter name="id"></Parameter>
  </SqlMethod>
</SqlClass>